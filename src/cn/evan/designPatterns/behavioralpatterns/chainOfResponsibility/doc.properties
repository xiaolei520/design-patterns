责任链模式(Chain of Responsibility Pattern) 

如果您看过Tomcat的源代码，一定对里边的管道模式(Pipeline)记忆犹新；如果您了解Servlet规范的话，一定会知道Filter；如果您使用过
Struts2的话，一定清楚无处不在的interceptor。上边的这些概念可以说都是责任链模式的抽象，或者说变种，下面我们就来看一下"原生态"
的责任链模式。
 
责任链模式顾名思义，对一个请求设计出一个链状的处理流程，处于链条上的每个类都可以处理这个请求，或者放弃对请求的处理然后交给链条
上的下一个类。 

一个"纯粹"的责任链模式应该是请求只能交给责任链上的一个类去处理，而不是每个类处理一部分，后者应该叫变种的责任链。还是举个简单的
例子来说明吧，就举一个产品的客户打电话寻求帮助的例子吧。
 
假如客户买了某公司的一个产品，可是发现产品出了问题，于是打电话到部门A询问，部门A告诉他去问一下部门B，部门B再让他问一下部门C......
 以此类推，最后部门Z终于给他解决了问题。
 
下面贴一下实现的代码，首先要有一系列的部门，这些部门就是责任链上的一系列类。 
